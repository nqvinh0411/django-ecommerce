openapi: 3.0.0
info:
  title: Catalog API
  description: API cho module catalog
  version: 1.0.0
  contact:
    name: API Support
    email: api@example.com
servers:
- url: https://api.example.com/api/v1
  description: Production server
- url: https://staging-api.example.com/api/v1
  description: Staging server
tags:
- name: catalog
  description: Operations related to catalog
paths:
  /attributevalues:
    get:
      tags:
      - attributevalues
      summary: List all attributevalues
      description: Returns a list of attributevalues
      operationId: listAttributevalues
      parameters:
      - name: page
        in: query
        description: Page number
        required: false
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        description: Number of items per page
        required: false
        schema:
          type: integer
          default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: List of attributevalues
                  data:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      count:
                        type: integer
                      page_size:
                        type: integer
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      next:
                        type: string
                        nullable: true
                      previous:
                        type: string
                        nullable: true
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Authentication credentials were not provided.
      security:
      - BearerAuth: []
    post:
      tags:
      - attributevalues
      summary: Create a new attributevalue
      description: Creates a new attributevalue and returns its details
      operationId: createAttributevalue
      requestBody:
        description: Attributevalue object that needs to be created
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: Attributevalue created successfully
                  data:
                    type: object
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Invalid input
                  errors:
                    type: object
      security:
      - BearerAuth: []
  /attributevalues/{id}:
    get:
      tags:
      - attributevalues
      summary: Get attributevalue by ID
      description: Returns a single attributevalue
      operationId: getAttributevalue
      parameters:
      - name: id
        in: path
        description: ID of attributevalue to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Attributevalue details
                  data:
                    type: object
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: Attributevalue not found
      security:
      - BearerAuth: []
    put:
      tags:
      - attributevalues
      summary: Update attributevalue
      description: Updates an existing attributevalue
      operationId: updateAttributevalue
      parameters:
      - name: id
        in: path
        description: ID of attributevalue to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Attributevalue object that needs to be updated
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Attributevalue updated successfully
                  data:
                    type: object
      security:
      - BearerAuth: []
    delete:
      tags:
      - attributevalues
      summary: Delete attributevalue
      description: Deletes a attributevalue
      operationId: deleteAttributevalue
      parameters:
      - name: id
        in: path
        description: ID of attributevalue to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 204
                  message:
                    type: string
                    example: Attributevalue deleted successfully
      security:
      - BearerAuth: []
  /attributes:
    get:
      tags:
      - attributes
      summary: List all attributes
      description: Returns a list of attributes
      operationId: listAttributes
      parameters:
      - name: page
        in: query
        description: Page number
        required: false
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        description: Number of items per page
        required: false
        schema:
          type: integer
          default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: List of attributes
                  data:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      count:
                        type: integer
                      page_size:
                        type: integer
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      next:
                        type: string
                        nullable: true
                      previous:
                        type: string
                        nullable: true
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Authentication credentials were not provided.
      security:
      - BearerAuth: []
    post:
      tags:
      - attributes
      summary: Create a new attribute
      description: Creates a new attribute and returns its details
      operationId: createAttribute
      requestBody:
        description: Attribute object that needs to be created
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: Attribute created successfully
                  data:
                    type: object
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Invalid input
                  errors:
                    type: object
      security:
      - BearerAuth: []
  /attributes/{id}:
    get:
      tags:
      - attributes
      summary: Get attribute by ID
      description: Returns a single attribute
      operationId: getAttribute
      parameters:
      - name: id
        in: path
        description: ID of attribute to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Attribute details
                  data:
                    type: object
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: Attribute not found
      security:
      - BearerAuth: []
    put:
      tags:
      - attributes
      summary: Update attribute
      description: Updates an existing attribute
      operationId: updateAttribute
      parameters:
      - name: id
        in: path
        description: ID of attribute to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Attribute object that needs to be updated
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Attribute updated successfully
                  data:
                    type: object
      security:
      - BearerAuth: []
    delete:
      tags:
      - attributes
      summary: Delete attribute
      description: Deletes a attribute
      operationId: deleteAttribute
      parameters:
      - name: id
        in: path
        description: ID of attribute to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 204
                  message:
                    type: string
                    example: Attribute deleted successfully
      security:
      - BearerAuth: []
  /brands:
    get:
      tags:
      - brands
      summary: List all brands
      description: Returns a list of brands
      operationId: listBrands
      parameters:
      - name: page
        in: query
        description: Page number
        required: false
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        description: Number of items per page
        required: false
        schema:
          type: integer
          default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: List of brands
                  data:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      count:
                        type: integer
                      page_size:
                        type: integer
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      next:
                        type: string
                        nullable: true
                      previous:
                        type: string
                        nullable: true
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Authentication credentials were not provided.
      security:
      - BearerAuth: []
    post:
      tags:
      - brands
      summary: Create a new brand
      description: Creates a new brand and returns its details
      operationId: createBrand
      requestBody:
        description: Brand object that needs to be created
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: Brand created successfully
                  data:
                    type: object
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Invalid input
                  errors:
                    type: object
      security:
      - BearerAuth: []
  /brands/{id}:
    get:
      tags:
      - brands
      summary: Get brand by ID
      description: Returns a single brand
      operationId: getBrand
      parameters:
      - name: id
        in: path
        description: ID of brand to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Brand details
                  data:
                    type: object
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: Brand not found
      security:
      - BearerAuth: []
    put:
      tags:
      - brands
      summary: Update brand
      description: Updates an existing brand
      operationId: updateBrand
      parameters:
      - name: id
        in: path
        description: ID of brand to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Brand object that needs to be updated
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Brand updated successfully
                  data:
                    type: object
      security:
      - BearerAuth: []
    delete:
      tags:
      - brands
      summary: Delete brand
      description: Deletes a brand
      operationId: deleteBrand
      parameters:
      - name: id
        in: path
        description: ID of brand to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 204
                  message:
                    type: string
                    example: Brand deleted successfully
      security:
      - BearerAuth: []
  /categorys:
    get:
      tags:
      - categorys
      summary: List all categorys
      description: Returns a list of categorys
      operationId: listCategorys
      parameters:
      - name: page
        in: query
        description: Page number
        required: false
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        description: Number of items per page
        required: false
        schema:
          type: integer
          default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: List of categorys
                  data:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      count:
                        type: integer
                      page_size:
                        type: integer
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      next:
                        type: string
                        nullable: true
                      previous:
                        type: string
                        nullable: true
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Authentication credentials were not provided.
      security:
      - BearerAuth: []
    post:
      tags:
      - categorys
      summary: Create a new category
      description: Creates a new category and returns its details
      operationId: createCategory
      requestBody:
        description: Category object that needs to be created
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: Category created successfully
                  data:
                    type: object
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Invalid input
                  errors:
                    type: object
      security:
      - BearerAuth: []
  /categorys/{id}:
    get:
      tags:
      - categorys
      summary: Get category by ID
      description: Returns a single category
      operationId: getCategory
      parameters:
      - name: id
        in: path
        description: ID of category to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Category details
                  data:
                    type: object
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: Category not found
      security:
      - BearerAuth: []
    put:
      tags:
      - categorys
      summary: Update category
      description: Updates an existing category
      operationId: updateCategory
      parameters:
      - name: id
        in: path
        description: ID of category to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Category object that needs to be updated
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Category updated successfully
                  data:
                    type: object
      security:
      - BearerAuth: []
    delete:
      tags:
      - categorys
      summary: Delete category
      description: Deletes a category
      operationId: deleteCategory
      parameters:
      - name: id
        in: path
        description: ID of category to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 204
                  message:
                    type: string
                    example: Category deleted successfully
      security:
      - BearerAuth: []
  /tags:
    get:
      tags:
      - tags
      summary: List all tags
      description: Returns a list of tags
      operationId: listTags
      parameters:
      - name: page
        in: query
        description: Page number
        required: false
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        description: Number of items per page
        required: false
        schema:
          type: integer
          default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: List of tags
                  data:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      count:
                        type: integer
                      page_size:
                        type: integer
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      next:
                        type: string
                        nullable: true
                      previous:
                        type: string
                        nullable: true
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Authentication credentials were not provided.
      security:
      - BearerAuth: []
    post:
      tags:
      - tags
      summary: Create a new tag
      description: Creates a new tag and returns its details
      operationId: createTag
      requestBody:
        description: Tag object that needs to be created
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: Tag created successfully
                  data:
                    type: object
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Invalid input
                  errors:
                    type: object
      security:
      - BearerAuth: []
  /tags/{id}:
    get:
      tags:
      - tags
      summary: Get tag by ID
      description: Returns a single tag
      operationId: getTag
      parameters:
      - name: id
        in: path
        description: ID of tag to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Tag details
                  data:
                    type: object
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: Tag not found
      security:
      - BearerAuth: []
    put:
      tags:
      - tags
      summary: Update tag
      description: Updates an existing tag
      operationId: updateTag
      parameters:
      - name: id
        in: path
        description: ID of tag to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Tag object that needs to be updated
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Tag updated successfully
                  data:
                    type: object
      security:
      - BearerAuth: []
    delete:
      tags:
      - tags
      summary: Delete tag
      description: Deletes a tag
      operationId: deleteTag
      parameters:
      - name: id
        in: path
        description: ID of tag to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 204
                  message:
                    type: string
                    example: Tag deleted successfully
      security:
      - BearerAuth: []
components:
  schemas: {}
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
